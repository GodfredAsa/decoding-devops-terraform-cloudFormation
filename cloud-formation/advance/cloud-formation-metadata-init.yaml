
  
# NOTE THIS EXERCISE FILE DEPLOYS A TOOLPLATE WEBSITE TO AWS AND PROVIDES AN OUTPUT URL FOR ACCESSING THE SITE USING AMAZON LINUX 

# META DATA OPTION IS GOOD WHEN THERE IS AN INIT SCRIPT THAT CAN INITIATE YOUR INSTANCE WITH SOME DATA 
# EXAMPLES: INSTALL PACKAGES, START SOME SERVICES, WHAT HAVE YOU
# IT'S MOSTLY SUPPORTED BY LINUX MACHINES BUT THERE IS ALSO SUPPORT FOR WINDOWS MACHINES
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-init.html

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html
# We will be using 2 parameters key pairs and instance type
# CREATE KEY PAIRS IN AWS CONSOLE IN THE SAME REGION 
Parameters:
  NameOfService:
    Description: "Name of Service stack is to be used for"
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
    Description: Select Instance type 
  KeyName:
    Description: Select EC2 Login key 
    Type: AWS::EC2::KeyPair::KeyName

Mappings: 
  AmiRegionMap: 
    us-east-1: 
      "AMI": "ami-0cf10cdf9fcd62d37"
    us-east-2: 
      "AMI": "ami-05fb0b8c1424f266b"

# THE BASIC NEED FOR THIS YAML FILE IS TO CREATE SG AND EC2 IN THE SAME FILE.
# THAT'S WHEN CREATING THE EC2 INSTANCE NEED TO REFER THE SG IN IT TO BE USED.
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              php: []
              httpd: []
              wget: []
              unzip: []
              git: []
          commands:
            test:
              command: "wget https://www.tooplate.com/zip-templates/2136_kool_form_pack.zip && unzip 2136_kool_form_pack.zip && cp -r 2136_kool_form_pack/* /var/www/html/" 
          files:
            /var/www/html/hello.html: 
              content: !Sub |
                â€¹!DOCTYPE html>
                <html>
                <body>
                <h1> Welcome to CloudFormation</h1>
                <p> Site Deployed by cloud formation</p>
                </body>
                <html>
          services:
            sysvinit:
              httpd: 
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap [ AmiRegionMap, !Ref AWS::Region, AMI]
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG
      UserData:
        Fn::Base64: 
          !Sub | 
            #!/bin/bash
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyEC2Instance --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyEC2Instance --region ${AWS::Region}
        
# SECURITY GROUP 
  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http from MyIP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 183.83.39.124/32

# 

Outputs:
  PrintSomeInfo:
    Description: "Public DNS Name of the created EC2 instance"
    Value: !GetAtt MyEC2Instance.PublicDnsName
